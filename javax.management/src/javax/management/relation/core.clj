(ns javax.management.relation.core
  (:refer-clojure :only [require comment defn ->])
  (:import ))

(require '[javax.management.relation.InvalidRelationIdException])
(require '[javax.management.relation.InvalidRelationServiceException])
(require '[javax.management.relation.InvalidRelationTypeException])
(require '[javax.management.relation.InvalidRoleInfoException])
(require '[javax.management.relation.InvalidRoleValueException])
(require '[javax.management.relation.MBeanServerNotificationFilter])
(require '[javax.management.relation.Relation])
(require '[javax.management.relation.RelationException])
(require '[javax.management.relation.RelationNotFoundException])
(require '[javax.management.relation.RelationNotification])
(require '[javax.management.relation.RelationService])
(require '[javax.management.relation.RelationServiceMBean])
(require '[javax.management.relation.RelationServiceNotRegisteredException])
(require '[javax.management.relation.RelationSupport])
(require '[javax.management.relation.RelationSupportMBean])
(require '[javax.management.relation.RelationType])
(require '[javax.management.relation.RelationTypeNotFoundException])
(require '[javax.management.relation.RelationTypeSupport])
(require '[javax.management.relation.Role])
(require '[javax.management.relation.RoleInfo])
(require '[javax.management.relation.RoleInfoNotFoundException])
(require '[javax.management.relation.RoleList])
(require '[javax.management.relation.RoleNotFoundException])
(require '[javax.management.relation.RoleResult])
(require '[javax.management.relation.RoleStatus])
(require '[javax.management.relation.RoleUnresolved])
(require '[javax.management.relation.RoleUnresolvedList])
