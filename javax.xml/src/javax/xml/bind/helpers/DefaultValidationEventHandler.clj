(ns javax.xml.bind.helpers.DefaultValidationEventHandler
  " JAXB 1.0 only default validation event handler. This is the default
  handler for all objects created from a JAXBContext that is managing
  schema-derived code generated by a JAXB 1.0 binding compiler.


  This handler causes the unmarshal and validate operations to fail on the first
  error or fatal error.


  This handler is not the default handler for JAXB mapped classes following
  JAXB 2.0 or later versions. Default validation event handling has changed
  and is specified in  Unmarshaller and
  Marshaller."
  (:refer-clojure :only [require comment defn ->])
  (:import [javax.xml.bind.helpers DefaultValidationEventHandler]))

(defn ->default-validation-event-handler
  "Constructor."
  (^DefaultValidationEventHandler []
    (new DefaultValidationEventHandler )))

(defn handle-event
  "Description copied from interface: ValidationEventHandler

  event - the encapsulated validation event information. It is a provider error if this parameter is null. - `javax.xml.bind.ValidationEvent`

  returns: true if the JAXB Provider should attempt to continue the current
           unmarshal, validate, or marshal operation after handling this
           warning/error, false if the provider should terminate the current
           operation with the appropriate UnmarshalException,
           ValidationException, or MarshalException. - `boolean`"
  (^Boolean [^DefaultValidationEventHandler this ^javax.xml.bind.ValidationEvent event]
    (-> this (.handleEvent event))))

