(ns jdk.util.core
  (:refer-clojure :only [require comment defn ->])
  (:import ))

(require '[jdk.util.AbstractCollection])
(require '[jdk.util.AbstractList])
(require '[jdk.util.AbstractMap$SimpleEntry])
(require '[jdk.util.AbstractMap$SimpleImmutableEntry])
(require '[jdk.util.AbstractMap])
(require '[jdk.util.AbstractQueue])
(require '[jdk.util.AbstractSequentialList])
(require '[jdk.util.AbstractSet])
(require '[jdk.util.ArrayDeque])
(require '[jdk.util.ArrayList])
(require '[jdk.util.Arrays])
(require '[jdk.util.Base64$Decoder])
(require '[jdk.util.Base64$Encoder])
(require '[jdk.util.Base64])
(require '[jdk.util.BitSet])
(require '[jdk.util.Calendar$Builder])
(require '[jdk.util.Calendar])
(require '[jdk.util.Collection])
(require '[jdk.util.Collections])
(require '[jdk.util.Comparator])
(require '[jdk.util.ConcurrentModificationException])
(require '[jdk.util.Currency])
(require '[jdk.util.Date])
(require '[jdk.util.Deque])
(require '[jdk.util.Dictionary])
(require '[jdk.util.DoubleSummaryStatistics])
(require '[jdk.util.DuplicateFormatFlagsException])
(require '[jdk.util.EmptyStackException])
(require '[jdk.util.EnumMap,V>])
(require '[jdk.util.EnumSet>])
(require '[jdk.util.Enumeration])
(require '[jdk.util.EventListener])
(require '[jdk.util.EventListenerProxy])
(require '[jdk.util.EventObject])
(require '[jdk.util.FormatFlagsConversionMismatchException])
(require '[jdk.util.Formattable])
(require '[jdk.util.FormattableFlags])
(require '[jdk.util.Formatter$BigDecimalLayoutForm])
(require '[jdk.util.Formatter])
(require '[jdk.util.FormatterClosedException])
(require '[jdk.util.GregorianCalendar])
(require '[jdk.util.HashMap])
(require '[jdk.util.HashSet])
(require '[jdk.util.Hashtable])
(require '[jdk.util.IdentityHashMap])
(require '[jdk.util.IllegalFormatCodePointException])
(require '[jdk.util.IllegalFormatConversionException])
(require '[jdk.util.IllegalFormatException])
(require '[jdk.util.IllegalFormatFlagsException])
(require '[jdk.util.IllegalFormatPrecisionException])
(require '[jdk.util.IllegalFormatWidthException])
(require '[jdk.util.IllformedLocaleException])
(require '[jdk.util.InputMismatchException])
(require '[jdk.util.IntSummaryStatistics])
(require '[jdk.util.InvalidPropertiesFormatException])
(require '[jdk.util.Iterator])
(require '[jdk.util.LinkedHashMap])
(require '[jdk.util.LinkedHashSet])
(require '[jdk.util.LinkedList])
(require '[jdk.util.List])
(require '[jdk.util.ListIterator])
(require '[jdk.util.ListResourceBundle])
(require '[jdk.util.Locale$Builder])
(require '[jdk.util.Locale$Category])
(require '[jdk.util.Locale$FilteringMode])
(require '[jdk.util.Locale$LanguageRange])
(require '[jdk.util.Locale])
(require '[jdk.util.LongSummaryStatistics])
(require '[jdk.util.Map$Entry])
(require '[jdk.util.Map])
(require '[jdk.util.MissingFormatArgumentException])
(require '[jdk.util.MissingFormatWidthException])
(require '[jdk.util.MissingResourceException])
(require '[jdk.util.NavigableMap])
(require '[jdk.util.NavigableSet])
(require '[jdk.util.NoSuchElementException])
(require '[jdk.util.Objects])
(require '[jdk.util.Observable])
(require '[jdk.util.Observer])
(require '[jdk.util.Optional])
(require '[jdk.util.OptionalDouble])
(require '[jdk.util.OptionalInt])
(require '[jdk.util.OptionalLong])
(require '[jdk.util.PrimitiveIterator$OfDouble])
(require '[jdk.util.PrimitiveIterator$OfInt])
(require '[jdk.util.PrimitiveIterator$OfLong])
(require '[jdk.util.PrimitiveIterator])
(require '[jdk.util.PriorityQueue])
(require '[jdk.util.Properties])
(require '[jdk.util.PropertyPermission])
(require '[jdk.util.PropertyResourceBundle])
(require '[jdk.util.Queue])
(require '[jdk.util.Random])
(require '[jdk.util.RandomAccess])
(require '[jdk.util.ResourceBundle$Control])
(require '[jdk.util.ResourceBundle])
(require '[jdk.util.Scanner])
(require '[jdk.util.ServiceConfigurationError])
(require '[jdk.util.ServiceLoader])
(require '[jdk.util.Set])
(require '[jdk.util.SimpleTimeZone])
(require '[jdk.util.SortedMap])
(require '[jdk.util.SortedSet])
(require '[jdk.util.Spliterator$OfDouble])
(require '[jdk.util.Spliterator$OfInt])
(require '[jdk.util.Spliterator$OfLong])
(require '[jdk.util.Spliterator$OfPrimitive>])
(require '[jdk.util.Spliterator])
(require '[jdk.util.Spliterators$AbstractDoubleSpliterator])
(require '[jdk.util.Spliterators$AbstractIntSpliterator])
(require '[jdk.util.Spliterators$AbstractLongSpliterator])
(require '[jdk.util.Spliterators$AbstractSpliterator])
(require '[jdk.util.Spliterators])
(require '[jdk.util.SplittableRandom])
(require '[jdk.util.Stack])
(require '[jdk.util.StringJoiner])
(require '[jdk.util.StringTokenizer])
(require '[jdk.util.TimeZone])
(require '[jdk.util.Timer])
(require '[jdk.util.TimerTask])
(require '[jdk.util.TooManyListenersException])
(require '[jdk.util.TreeMap])
(require '[jdk.util.TreeSet])
(require '[jdk.util.UUID])
(require '[jdk.util.UnknownFormatConversionException])
(require '[jdk.util.UnknownFormatFlagsException])
(require '[jdk.util.Vector])
(require '[jdk.util.WeakHashMap])
