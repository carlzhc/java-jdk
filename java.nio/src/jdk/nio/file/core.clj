(ns jdk.nio.file.core
  (:refer-clojure :only [require comment defn ->])
  (:import ))

(require '[jdk.nio.file.AccessDeniedException])
(require '[jdk.nio.file.AccessMode])
(require '[jdk.nio.file.AtomicMoveNotSupportedException])
(require '[jdk.nio.file.ClosedDirectoryStreamException])
(require '[jdk.nio.file.ClosedFileSystemException])
(require '[jdk.nio.file.ClosedWatchServiceException])
(require '[jdk.nio.file.CopyOption])
(require '[jdk.nio.file.DirectoryIteratorException])
(require '[jdk.nio.file.DirectoryNotEmptyException])
(require '[jdk.nio.file.DirectoryStream$Filter])
(require '[jdk.nio.file.DirectoryStream])
(require '[jdk.nio.file.FileAlreadyExistsException])
(require '[jdk.nio.file.FileStore])
(require '[jdk.nio.file.FileSystem])
(require '[jdk.nio.file.FileSystemAlreadyExistsException])
(require '[jdk.nio.file.FileSystemException])
(require '[jdk.nio.file.FileSystemLoopException])
(require '[jdk.nio.file.FileSystemNotFoundException])
(require '[jdk.nio.file.FileSystems])
(require '[jdk.nio.file.FileVisitOption])
(require '[jdk.nio.file.FileVisitResult])
(require '[jdk.nio.file.FileVisitor])
(require '[jdk.nio.file.Files])
(require '[jdk.nio.file.InvalidPathException])
(require '[jdk.nio.file.LinkOption])
(require '[jdk.nio.file.LinkPermission])
(require '[jdk.nio.file.NoSuchFileException])
(require '[jdk.nio.file.NotDirectoryException])
(require '[jdk.nio.file.NotLinkException])
(require '[jdk.nio.file.OpenOption])
(require '[jdk.nio.file.Path])
(require '[jdk.nio.file.PathMatcher])
(require '[jdk.nio.file.Paths])
(require '[jdk.nio.file.ProviderMismatchException])
(require '[jdk.nio.file.ProviderNotFoundException])
(require '[jdk.nio.file.ReadOnlyFileSystemException])
(require '[jdk.nio.file.SecureDirectoryStream])
(require '[jdk.nio.file.SimpleFileVisitor])
(require '[jdk.nio.file.StandardCopyOption])
(require '[jdk.nio.file.StandardOpenOption])
(require '[jdk.nio.file.StandardWatchEventKinds])
(require '[jdk.nio.file.WatchEvent$Kind])
(require '[jdk.nio.file.WatchEvent$Modifier])
(require '[jdk.nio.file.WatchEvent])
(require '[jdk.nio.file.WatchKey])
(require '[jdk.nio.file.WatchService])
(require '[jdk.nio.file.Watchable])
